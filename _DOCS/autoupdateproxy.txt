

--[[purpose] ------------------------------------------------------------------------------------
manual sf file distribution

i made this library because some things i prefer to keep as advdupe2s instead of
a starfall spawning everything. i got tired to having to make sure that the
sf in my dupes were up to date all the time.

compared to normal sf file distribution:
    +dupes will auto update to latest code instead of keeping old code
    +possibly less chance of net timeout (we have control over that instead of SF)
    -much slower
    -possibly more expensive execution on other clients (have to unpack code)

file load order is important, of course

ClientInitialized is called a second time by this library once all the cl files 
have reached their destination. a second argument is added to this call
ClientInitialized(ply, aup)
where aup is true if this hook call was caused by aup. code accordingly

--[[functions] ------------------------------------------------------------------------------------]]

autoupdateproxy.runFile(path, autoupdateproxy.SH, bool or nil owneronly)
    --[[ add a file to be run to the queue.
        -will not automatically parse --@includes in those models 
         (do it yourself by including those files in the right load order using this library)
        -can only be done at initialization of chip. no loading new files during runtime.
    ]]

autoupdateproxy.setMain(function main)
    --run your main function immediately after the final file has been received and executed
